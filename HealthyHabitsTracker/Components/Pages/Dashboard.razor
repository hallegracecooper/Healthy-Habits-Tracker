@page "/dashboard"
@rendermode InteractiveServer
@attribute [Authorize]
@using HealthyHabitsTracker.Data
@using HealthyHabitsTracker.Models
@using Microsoft.AspNetCore.Components.Authorization
@inject AppDbContext Db
@inject AuthenticationStateProvider AuthStateProvider

<PageTitle>Dashboard</PageTitle>

<h3>Dashboard</h3>

@if (loading)
{
    <p>Loading...</p>
}
else if (userId is null)
{
    <p>Unable to determine user identity. Please <a href="/login">log in</a> again.</p>
}
else if (!habits.Any())
{
    <p>No habits yet. Go add one!</p>
}
else
{
    <ul>
        @foreach (var h in habits)
        {
            <li>
                <strong>@h.Title</strong> - @h.Description
                @if (h.IsComplete)
                {
                    <span> (completed today)</span>
                }
            </li>
        }
    </ul>
}

@code {
    private bool loading = true;
    private string? userId;
    private List<Habit> habits = new();

    protected override async Task OnInitializedAsync()
    {
        var state = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = state.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            userId = user.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
            habits = Db.Habits
            .Where(h => h.UserId == userId)
            .OrderByDescending(h => h.DateCreated)
            .Take(25)
            .ToList();
        }

        loading = false;
    }
}
